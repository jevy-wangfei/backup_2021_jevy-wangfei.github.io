<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jevy Wang&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jevy.wang/"/>
  <updated>2020-03-12T05:28:56.016Z</updated>
  <id>https://jevy.wang/</id>
  
  <author>
    <name>Jevy Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://jevy.wang/post/hello-world.html"/>
    <id>https://jevy.wang/post/hello-world.html</id>
    <published>2020-03-12T05:28:56.016Z</published>
    <updated>2020-03-12T05:28:56.016Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Translante IDL script to python</title>
    <link href="https://jevy.wang/post/2020-02-04-i-post-translate-idl-to-python.html"/>
    <id>https://jevy.wang/post/2020-02-04-i-post-translate-idl-to-python.html</id>
    <published>2020-03-12T05:13:24.383Z</published>
    <updated>2020-03-12T05:32:40.301Z</updated>
    
    <content type="html"><![CDATA[<h2 id="IDL-programming-language"><a href="#IDL-programming-language" class="headerlink" title="IDL programming language"></a>IDL programming language</h2><p>IDL, short for Interactive Data Language, is a programming language used for data analysis. It is popular in particular areas of science, such as astronomy, atmospheric physics and medical imaging. (<a href="https://en.wikipedia.org/wiki/IDL_(programming_language)" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/IDL_(programming_language)</a>)</p><h2 id="IDL-to-python-numpy-document"><a href="#IDL-to-python-numpy-document" class="headerlink" title="IDL to python (numpy) document"></a>IDL to python (numpy) document</h2><ul><li>(IDL to Numeric/numarray Mapping)[<a href="https://www.johnny-lin.com/cdat_tips/tips_array/idl2num.html]" target="_blank" rel="noopener">https://www.johnny-lin.com/cdat_tips/tips_array/idl2num.html]</a></li><li>(NumPy for IDL users)[<a href="http://mathesaurus.sourceforge.net/idl-numpy.html]" target="_blank" rel="noopener">http://mathesaurus.sourceforge.net/idl-numpy.html]</a></li><li>(IDL commands in numerical Python)[<a href="http://mathesaurus.sourceforge.net/idl-python-xref.pdf]" target="_blank" rel="noopener">http://mathesaurus.sourceforge.net/idl-python-xref.pdf]</a></li></ul><h2 id="idlwrap-API"><a href="#idlwrap-API" class="headerlink" title="idlwrap API"></a>idlwrap API</h2><p>idlwrap helps you port IDL code to python by providing an IDL-like interface to numpy and scipy.</p><ul><li>(API)[<a href="https://r4lv.github.io/idlwrap/api.html]" target="_blank" rel="noopener">https://r4lv.github.io/idlwrap/api.html]</a></li></ul><h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><ul><li><p>Array</p><ul><li><p>IDL a[i, *] is the same with Python a[:,i]<br>There are two different ways of storing a matrix/array in memory: column-major and row-major. </p></li><li><p>IDL array index include the last element: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IDL&gt; (FLTARR(10))[3:5]</span><br><span class="line"> 0.00000      0.00000      0.00000 ; -&gt; three elements</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; np.zeros(10)[3:5]</span><br><span class="line">array([0., 0.]) # -&gt; two elements</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;IDL-programming-language&quot;&gt;&lt;a href=&quot;#IDL-programming-language&quot; class=&quot;headerlink&quot; title=&quot;IDL programming language&quot;&gt;&lt;/a&gt;IDL programmin
      
    
    </summary>
    
      <category term="timeline" scheme="https://jevy.wang/categories/timeline/"/>
    
    
      <category term="article" scheme="https://jevy.wang/tags/article/"/>
    
  </entry>
  
  <entry>
    <title>IP Camera BAT 310 Hacking</title>
    <link href="https://jevy.wang/post/2020-02-28-i-post-ip-camera-hacking.html"/>
    <id>https://jevy.wang/post/2020-02-28-i-post-ip-camera-hacking.html</id>
    <published>2020-03-12T05:13:24.383Z</published>
    <updated>2020-03-12T05:32:40.302Z</updated>
    
    <content type="html"><![CDATA[<p>Got a Solar WiFi IP camera from <a href="https://www.ebay.com.au/itm/302918525683?ul_noapp=true" target="_blank" rel="noopener">Wireless Solar IP67 Security Camera System Outdoor Home Cam 1080P 2MP</a></p><p>Wondering to control this camera using script/program. </p><p>To activate/wakeup, the camera has to be set correctly:</p><ol><li>The camera is connected to the Internet, and its status should be shown as ‘online’ on Microshare, Danale mobile client. </li></ol><p>Active the camera using python script:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket, sys</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">dest = (<span class="string">'camera ip address'</span>, <span class="string">'any port)</span></span><br><span class="line"><span class="string"># sending these hex code  in UDP protocal to active camera</span></span><br><span class="line"><span class="string">packet = binascii.unhexlify("0000000a983b16f8f39c")</span></span><br><span class="line"><span class="string">s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span></span><br><span class="line"><span class="string">s.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1)</span></span><br><span class="line"><span class="string">s.sendto(bytes(packet), dest)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Got a Solar WiFi IP camera from &lt;a href=&quot;https://www.ebay.com.au/itm/302918525683?ul_noapp=true&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Wireless 
      
    
    </summary>
    
      <category term="timeline" scheme="https://jevy.wang/categories/timeline/"/>
    
    
      <category term="article" scheme="https://jevy.wang/tags/article/"/>
    
  </entry>
  
  <entry>
    <title>Add an image layer to react mapbox gl</title>
    <link href="https://jevy.wang/post/2019-12-10-i-post-add-image-layer-to-react-mapbox-gl.html"/>
    <id>https://jevy.wang/post/2019-12-10-i-post-add-image-layer-to-react-mapbox-gl.html</id>
    <published>2020-03-12T05:13:24.382Z</published>
    <updated>2020-03-12T05:32:40.299Z</updated>
    
    <content type="html"><![CDATA[<p>Images could be added to mapbox using a <code>Layer</code> and <code>Source</code>.</p><h2 id="Layer-configuration"><a href="#Layer-configuration" class="headerlink" title="Layer configuration"></a>Layer configuration</h2><p>Prepare a source configuration by referenceing (this document)[<a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/#sources-image]" target="_blank" rel="noopener">https://docs.mapbox.com/mapbox-gl-js/style-spec/#sources-image]</a></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">const Image_SOURCE_OPTIONS = &#123;</span><br><span class="line">    "type": "image",</span><br><span class="line">    "url": "https://docs.mapbox.com/mapbox-gl-js/assets/radar.gif",</span><br><span class="line">    "coordinates": [</span><br><span class="line">        [-80.425, 46.437],</span><br><span class="line">        [-71.516, 46.437],</span><br><span class="line">        [-71.516, 37.936],</span><br><span class="line">        [<span class="number">-80.425</span>, <span class="number">37.936</span>]</span><br><span class="line">    ] </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>For base64 image, the url could be <code>data:image/png;base64,</code> + base64 image data:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">const Image_SOURCE_OPTIONS = &#123;</span><br><span class="line">    "type": "image",</span><br><span class="line">    "url": "data:image/png;base64,...",</span><br><span class="line">    "coordinates": [</span><br><span class="line">        [-80.425, 46.437],</span><br><span class="line">        [-71.516, 46.437],</span><br><span class="line">        [-71.516, 37.936],</span><br><span class="line">        [<span class="number">-80.425</span>, <span class="number">37.936</span>]</span><br><span class="line">    ] </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="Create-a-Source"><a href="#Create-a-Source" class="headerlink" title="Create a Source"></a>Create a Source</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Source</span> <span class="attr">id</span>=<span class="string">"source_id"</span> <span class="attr">tileJsonSource</span>=<span class="string">&#123;RASTER_SOURCE_OPTIONS&#125;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Create-a-Layer"><a href="#Create-a-Layer" class="headerlink" title="Create a Layer"></a>Create a Layer</h2><p>Reference (react-mapbox-gl document)[<a href="https://github.com/alex3165/react-mapbox-gl/blob/master/docs/API.md#layer]" target="_blank" rel="noopener">https://github.com/alex3165/react-mapbox-gl/blob/master/docs/API.md#layer]</a>, the type could only be <code>symbol</code>, <code>line</code>, <code>raster</code>, … </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Layer</span> <span class="attr">type</span>=<span class="string">"raster"</span> <span class="attr">id</span>=<span class="string">"layer_id"</span> <span class="attr">sourceId</span>=<span class="string">"source_id"</span> /&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Images could be added to mapbox using a &lt;code&gt;Layer&lt;/code&gt; and &lt;code&gt;Source&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Layer-configuration&quot;&gt;&lt;a href=&quot;#Layer-conf
      
    
    </summary>
    
      <category term="timeline" scheme="https://jevy.wang/categories/timeline/"/>
    
    
      <category term="article" scheme="https://jevy.wang/tags/article/"/>
    
  </entry>
  
  <entry>
    <title>Parse URL params using API Gateway and lambda</title>
    <link href="https://jevy.wang/post/2019-12-13-i-post-create-api-on-aws-lambda.html"/>
    <id>https://jevy.wang/post/2019-12-13-i-post-create-api-on-aws-lambda.html</id>
    <published>2020-03-12T05:13:24.382Z</published>
    <updated>2020-03-12T05:32:40.301Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Lambda-script"><a href="#Lambda-script" class="headerlink" title="Lambda script"></a>Lambda script</h2><p>Lambda could collect POST boday and url params using <code>event</code> . For POST body, params could be extracted directly like <code>event[&#39;param1&#39;]</code>.<br>As of September 2017, you no longer have to configure mappings to access the request body.<br>All you need to do is check, “Use Lambda Proxy integration”, under Integration Request, under the resource of AWS API Gateway.</p><p>You’ll then be able to access query parameters, path parameters and headers like so</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">event[&apos;pathParameters&apos;][&apos;param1&apos;]</span><br><span class="line">event[&quot;queryStringParameters&quot;][&apos;queryparam1&apos;]</span><br><span class="line">event[&apos;requestContext&apos;][&apos;identity&apos;][&apos;userAgent&apos;]</span><br><span class="line">event[&apos;requestContext&apos;][&apos;identity&apos;][&apos;sourceIP&apos;]</span><br></pre></td></tr></table></figure><p>For proxied API, the hander function should return the reponse in following format:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"isBase64Encoded"</span>: <span class="literal">true</span>|<span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"statusCode"</span>: httpStatusCode,</span><br><span class="line">    "headers": &#123; "headerName": "headerValue", ... &#125;,</span><br><span class="line">    "body": "..."</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Usually, when you see Malformed Lambda proxy response, it means your response from your Lambda function doesn’t match the format API Gateway is expecting. </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Lambda-script&quot;&gt;&lt;a href=&quot;#Lambda-script&quot; class=&quot;headerlink&quot; title=&quot;Lambda script&quot;&gt;&lt;/a&gt;Lambda script&lt;/h2&gt;&lt;p&gt;Lambda could collect POST 
      
    
    </summary>
    
      <category term="timeline" scheme="https://jevy.wang/categories/timeline/"/>
    
    
      <category term="article" scheme="https://jevy.wang/tags/article/"/>
    
  </entry>
  
  <entry>
    <title>IP Camera BAT 310 Hacking</title>
    <link href="https://jevy.wang/post/2019-09-11-i-post-goaccess-analysis-k8s-nginx-log.html"/>
    <id>https://jevy.wang/post/2019-09-11-i-post-goaccess-analysis-k8s-nginx-log.html</id>
    <published>2020-03-12T05:13:24.381Z</published>
    <updated>2020-03-12T05:32:40.300Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Software"><a href="#Software" class="headerlink" title="Software"></a>Software</h2><ul><li>use this document to update goaccess to the latest version: <a href="https://goaccess.io/download" target="_blank" rel="noopener">https://goaccess.io/download</a></li><li>use this document to find the suitable log format: <a href="https://github.com/allinurl/goaccess/blob/master/config/goaccess.conf" target="_blank" rel="noopener">https://github.com/allinurl/goaccess/blob/master/config/goaccess.conf</a></li><li>install jq linux tool</li><li><h2 id="Analysis-K8S-nginx-log"><a href="#Analysis-K8S-nginx-log" class="headerlink" title="Analysis K8S nginx log"></a>Analysis K8S nginx log</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find */* -<span class="built_in">type</span> f  -<span class="built_in">exec</span> jq <span class="string">".textPayload"</span> \&#123;\&#125; \; | goaccess --<span class="built_in">log</span>-format=<span class="string">'%^ %^ [%h] %^ %^ [%d:%t %^] \"%r\" %^ %b \"%R\" \"%u\" %^ %^ [%v] %^:%^ %^ %T %^ %^'</span> --date-format=%d/%b/%Y --time-format=%H:%M:%S - --with-output-resolver -o out.html</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Software&quot;&gt;&lt;a href=&quot;#Software&quot; class=&quot;headerlink&quot; title=&quot;Software&quot;&gt;&lt;/a&gt;Software&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;use this document to update goaccess to 
      
    
    </summary>
    
      <category term="timeline" scheme="https://jevy.wang/categories/timeline/"/>
    
    
      <category term="article" scheme="https://jevy.wang/tags/article/"/>
    
  </entry>
  
  <entry>
    <title>IP Camera BAT 310 Hacking</title>
    <link href="https://jevy.wang/post/2019-09-11-i-post-get-data-from-google-storage.html"/>
    <id>https://jevy.wang/post/2019-09-11-i-post-get-data-from-google-storage.html</id>
    <published>2020-03-12T05:13:24.381Z</published>
    <updated>2020-03-12T05:32:40.294Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Software"><a href="#Software" class="headerlink" title="Software"></a>Software</h2><ul><li>Install gcloud with gsutil included</li><li></li></ul><h2 id="Login-google-cloud-using-json-file"><a href="#Login-google-cloud-using-json-file" class="headerlink" title="Login google cloud using json file"></a>Login google cloud using json file</h2><p>document: <a href="https://cloud.google.com/sdk/gcloud/reference/auth/activate-service-account" target="_blank" rel="noopener">https://cloud.google.com/sdk/gcloud/reference/auth/activate-service-account</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcloud auth activate-service-account <span class="built_in">test</span>@test.iam.gserviceaccount.com --key-file=./secret.json</span><br></pre></td></tr></table></figure><h2 id="Copy-data"><a href="#Copy-data" class="headerlink" title="Copy data"></a>Copy data</h2><p>reference this document for detail: <a href="https://cloud.google.com/storage/docs/gsutil/commands/cp" target="_blank" rel="noopener">https://cloud.google.com/storage/docs/gsutil/commands/cp</a></p><p>-copy bucket data to local</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gsutil -m cp -r gs://my-bucket/data ./data</span><br></pre></td></tr></table></figure><h2 id="rsync-data"><a href="#rsync-data" class="headerlink" title="rsync data"></a>rsync data</h2><p>reference this document for detail: <a href="https://cloud.google.com/storage/docs/gsutil/commands/rsync" target="_blank" rel="noopener">https://cloud.google.com/storage/docs/gsutil/commands/rsync</a></p><ul><li>rsync local data from bucket<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gsutil -m rsync -d -r gs://mybucket/data  ./data</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Software&quot;&gt;&lt;a href=&quot;#Software&quot; class=&quot;headerlink&quot; title=&quot;Software&quot;&gt;&lt;/a&gt;Software&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Install gcloud with gsutil included&lt;/li&gt;
      
    
    </summary>
    
      <category term="timeline" scheme="https://jevy.wang/categories/timeline/"/>
    
    
      <category term="article" scheme="https://jevy.wang/tags/article/"/>
    
  </entry>
  
  <entry>
    <title>Add an image layer to react mapbox gl</title>
    <link href="https://jevy.wang/post/2019-09-11-i-post-add-image-layer-to-react-mapbox-gl.html"/>
    <id>https://jevy.wang/post/2019-09-11-i-post-add-image-layer-to-react-mapbox-gl.html</id>
    <published>2020-03-12T05:13:24.380Z</published>
    <updated>2020-03-12T05:32:40.294Z</updated>
    
    <content type="html"><![CDATA[<p>Images could be added to mapbox using a <code>Layer</code> and a <code>Source</code> component.</p><h2 id="Layer-configuration"><a href="#Layer-configuration" class="headerlink" title="Layer configuration"></a>Layer configuration</h2><p>Prepare a source configuration by referenceing (this document)[<a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/#sources-image]" target="_blank" rel="noopener">https://docs.mapbox.com/mapbox-gl-js/style-spec/#sources-image]</a></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">const Image_SOURCE_OPTIONS = &#123;</span><br><span class="line">    "type": "image",</span><br><span class="line">    "url": "https://docs.mapbox.com/mapbox-gl-js/assets/radar.gif",</span><br><span class="line">    "coordinates": [</span><br><span class="line">        [-80.425, 46.437],</span><br><span class="line">        [-71.516, 46.437],</span><br><span class="line">        [-71.516, 37.936],</span><br><span class="line">        [<span class="number">-80.425</span>, <span class="number">37.936</span>]</span><br><span class="line">    ] </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>For base64 image, the url could be <code>data:image/png;base64,</code> + base64 image data:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">const Image_SOURCE_OPTIONS = &#123;</span><br><span class="line">    "type": "image",</span><br><span class="line">    "url": "data:image/png;base64,...",</span><br><span class="line">    "coordinates": [</span><br><span class="line">        [-80.425, 46.437],</span><br><span class="line">        [-71.516, 46.437],</span><br><span class="line">        [-71.516, 37.936],</span><br><span class="line">        [<span class="number">-80.425</span>, <span class="number">37.936</span>]</span><br><span class="line">    ] </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="Create-a-Source"><a href="#Create-a-Source" class="headerlink" title="Create a Source"></a>Create a Source</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Source</span> <span class="attr">id</span>=<span class="string">"source_id"</span> <span class="attr">tileJsonSource</span>=<span class="string">&#123;RASTER_SOURCE_OPTIONS&#125;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Create-a-Layer"><a href="#Create-a-Layer" class="headerlink" title="Create a Layer"></a>Create a Layer</h2><p>Reference (react-mapbox-gl document)[<a href="https://github.com/alex3165/react-mapbox-gl/blob/master/docs/API.md#layer]" target="_blank" rel="noopener">https://github.com/alex3165/react-mapbox-gl/blob/master/docs/API.md#layer]</a>, the type could only be <code>symbol</code>, <code>line</code>, <code>raster</code>, … </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Layer</span> <span class="attr">type</span>=<span class="string">"raster"</span> <span class="attr">id</span>=<span class="string">"layer_id"</span> <span class="attr">sourceId</span>=<span class="string">"source_id"</span> /&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Images could be added to mapbox using a &lt;code&gt;Layer&lt;/code&gt; and a &lt;code&gt;Source&lt;/code&gt; component.&lt;/p&gt;
&lt;h2 id=&quot;Layer-configuration&quot;&gt;&lt;a href=
      
    
    </summary>
    
      <category term="timeline" scheme="https://jevy.wang/categories/timeline/"/>
    
    
      <category term="article" scheme="https://jevy.wang/tags/article/"/>
    
  </entry>
  
  <entry>
    <title>Install owncloud with docker and local directory</title>
    <link href="https://jevy.wang/post/2019-06-07-install-owncloud-with-docker-and-local-directory.html"/>
    <id>https://jevy.wang/post/2019-06-07-install-owncloud-with-docker-and-local-directory.html</id>
    <published>2020-03-12T05:13:24.379Z</published>
    <updated>2020-03-12T05:32:40.293Z</updated>
    
    <content type="html"><![CDATA[<p>I was struggled on installing owncloud barely on ubuntu 18, and spent hours on install and config its dependencies, but failed on database script execution. </p><p>During googling to solve my problem, I noticed a dockerized owncloud, and find it’s pretty easy to setup. </p><p>Here is the installation/configuration log:</p><p><strong>Install docker and docker-compose</strong></p><ul><li><a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/" target="_blank" rel="noopener">docker</a></li><li><a href="https://docs.docker.com/compose/install/" target="_blank" rel="noopener">docker-compose</a></li></ul><p><strong>Prepare a docker-compose.yml</strong> :</p><p>Referenced  this <a href="https://doc.owncloud.com/server/admin_manual/installation/docker/" target="_blank" rel="noopener">Installing with Docker</a><br>and this <a href="https://raw.githubusercontent.com/owncloud-docker/server/master/docker-compose.yml" target="_blank" rel="noopener">yml file</a> to make my own docker-compose.yml file.</p><p>Because I have a RDS instance on cloud, and a NAS storage mounted on this server, I was wondering to reuse them. So I removed the volumns and db dependencies from the yml file.<br>Becuase this owncloud file sharing will be used by very few users, and the VM will have extra charge for CPU usage, I removed redis. </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2.1'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">owncloud:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">owncloud/server:10.0</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:8080</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OWNCLOUD_DOMAIN=localhost</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OWNCLOUD_DB_TYPE=mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OWNCLOUD_DB_NAME=db_name</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OWNCLOUD_DB_USERNAME=db_username</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OWNCLOUD_DB_PASSWORD=db_password</span></span><br><span class="line">      <span class="comment"># db can be any remote url with accessing privilidge</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OWNCLOUD_DB_HOST=db_url</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OWNCLOUD_ADMIN_USERNAME=admin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OWNCLOUD_ADMIN_PASSWORD=admin</span></span><br><span class="line">      <span class="comment"># for owncloud &gt;= 9.0, add this config to allow local directory as external storage</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OWNCLOUD_ALLOW_EXTERNAL_LOCAL_STORAGE=true</span></span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">test:</span> <span class="string">["CMD",</span> <span class="string">"/usr/bin/healthcheck"</span><span class="string">]</span></span><br><span class="line">      <span class="attr">interval:</span> <span class="string">30s</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="string">10s</span></span><br><span class="line">      <span class="attr">retries:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/mnt/data/owncloud:/mnt/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/other-directory1:/mnt/data/d1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/other-directory2:/mnt/data/d2</span></span><br></pre></td></tr></table></figure><p>Use command <code>sudo docker-compose up -d</code> to start owncloud, and access it through <code>server_ip:8080</code>.<br>Please add port <code>8080</code> to your VM’s network route rule. </p><p><strong>Add local storage</strong> :</p><p>Reference this <a href="https://doc.owncloud.com/server/admin_manual/configuration/files/external_storage/local.html" target="_blank" rel="noopener">Local storage</a> to add local directory. </p><p><strong>usefull notes</strong></p><ul><li>scan files copied to owncloud directory: <code>docker-compose exec owncloud occ files:scan --all</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I was struggled on installing owncloud barely on ubuntu 18, and spent hours on install and config its dependencies, but failed on databas
      
    
    </summary>
    
      <category term="news" scheme="https://jevy.wang/categories/news/"/>
    
    
      <category term="owncloud" scheme="https://jevy.wang/tags/owncloud/"/>
    
      <category term="docker" scheme="https://jevy.wang/tags/docker/"/>
    
      <category term="container" scheme="https://jevy.wang/tags/container/"/>
    
      <category term="local mount storage" scheme="https://jevy.wang/tags/local-mount-storage/"/>
    
  </entry>
  
  <entry>
    <title>Read H264 livestream using ffmpeg and cv2</title>
    <link href="https://jevy.wang/post/2019-02-28-i-post-read-h264-livestream.html"/>
    <id>https://jevy.wang/post/2019-02-28-i-post-read-h264-livestream.html</id>
    <published>2020-03-12T05:13:24.378Z</published>
    <updated>2020-03-12T05:32:40.293Z</updated>
    
    <content type="html"><![CDATA[<p>Got a Solar WiFi IP camera from <a href="https://www.ebay.com.au/itm/302918525683?ul_noapp=true" target="_blank" rel="noopener">Wireless Solar IP67 Security Camera System Outdoor Home Cam 1080P 2MP</a></p><p>Wondering to capture video or images from the camera using script/program. </p><p><code>ffmpeg -re -i &quot;http://host ip:81/livestream.cgi?user=admin&amp;pwd=&amp;streamid=0&quot; -c copy -f mpegts test.mp4</code></p><p><code>ffmpeg  -i &quot;http://host ip:81/livestream.cgi?user=admin&amp;pwd=a123&amp;streamid=0&quot; -c copy -f mpegts -ss 5 -frames:v 5 testt.png</code></p><p>FFMPEG is not portable, another way of using cv2 to capture a picture:<br>(ref <a href="https://stackoverflow.com/questions/28477600/not-able-to-play-h264-video-on-opencv" target="_blank" rel="noopener">Not able to play .h264 video on OpenCV?</a>)</p><pre><code class="python">cap = cv2.VideoCapture(<span class="string">'http://host:81/livestream.cgi?user=admin&amp;pwd=&amp;streamid=0'</span>)        <span class="keyword">while</span>(cap.isOpened()):            ret, frame = cap.read()            <span class="comment"># write to local file</span>            cv2.imwrite(<span class="string">"capture.png"</span>,frame)            <span class="comment"># create memory file object save to AWS S3</span>            <span class="comment">#img_data = io.BytesIO(cv2.imencode('.png', frame)[1])</span>            <span class="keyword">break</span>        cap.release()</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Got a Solar WiFi IP camera from &lt;a href=&quot;https://www.ebay.com.au/itm/302918525683?ul_noapp=true&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Wireless 
      
    
    </summary>
    
      <category term="timeline" scheme="https://jevy.wang/categories/timeline/"/>
    
    
      <category term="article" scheme="https://jevy.wang/tags/article/"/>
    
  </entry>
  
  <entry>
    <title>Package AWS Lambda function</title>
    <link href="https://jevy.wang/post/2019-02-28-i-post-package-aws-lambda.html"/>
    <id>https://jevy.wang/post/2019-02-28-i-post-package-aws-lambda.html</id>
    <published>2020-03-12T05:13:24.378Z</published>
    <updated>2020-03-12T05:32:40.293Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Install/start Docker </li><li>Install python3</li><li>Install nodejs (npm included)</li><li>Install serverless: npm install -g serverless</li><li>Install virtualenv of python pip install virtualenv</li></ul><p>Create Serverless project</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">serverless create   --template aws-python3  --name project-name  --path project-path</span><br></pre></td></tr></table></figure><p>Active virtualenv at project directory:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">virtualenv venv --python=python3</span><br><span class="line"># On Windows</span><br><span class="line">.\venv\Script\activate</span><br><span class="line"># On Linux</span><br><span class="line">source venv/bin/activate</span><br></pre></td></tr></table></figure><p>Install python package and code as usual in python virtual environment</p><p>Freeze python package to requirements.txt<br><code>pip freeze &gt; requirements.txt</code></p><p>Install <code>serverless-python-requirements</code> and config the plugin at serverless.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save serverless-python-requirements</span><br><span class="line">`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">service: project-name # NOTE: update this with your service name</span><br><span class="line">provider:</span><br><span class="line">  name: aws</span><br><span class="line">  runtime: python3.6</span><br><span class="line">  region: aws-reagon</span><br><span class="line">  role: aws-iam-role-with-the-privilidge-to-create-lambda-function</span><br><span class="line">plugins:</span><br><span class="line">  - serverless-python-requirements</span><br><span class="line"># you can add packaging information here</span><br><span class="line">package:</span><br><span class="line">  exclude:</span><br><span class="line">     - vent/**</span><br><span class="line"></span><br><span class="line">functions:</span><br><span class="line">  hello:</span><br><span class="line">    handler: handler.hello</span><br><span class="line">    events:</span><br><span class="line">      - http:</span><br><span class="line">          path: hello</span><br><span class="line">          method: get</span><br><span class="line">          cors: true</span><br><span class="line">          integration: LAMBDA</span><br><span class="line">      - schedule: rate(1 hour)</span><br></pre></td></tr></table></figure><p>Deploy to AWS:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">serverless deploy</span><br></pre></td></tr></table></figure><p>Useful tools:</p><ul><li>serverless logs –function hello #check last log</li><li>serverless invoke -f hello –log #invoke the function</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;Install/start Docker &lt;/li&gt;
&lt;li&gt;Install python3&lt;/li&gt;
&lt;li&gt;Install nodejs (npm included)&lt;/li&gt;
&lt;li&gt;Install serverless: npm install -g s
      
    
    </summary>
    
      <category term="timeline" scheme="https://jevy.wang/categories/timeline/"/>
    
    
      <category term="article" scheme="https://jevy.wang/tags/article/"/>
    
  </entry>
  
</feed>
